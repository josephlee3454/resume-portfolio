[{"/home/owner/dojo/js/props/resume/resume/src/reportWebVitals.js":"1","/home/owner/dojo/js/props/resume/resume/src/App.js":"2","/home/owner/dojo/js/props/resume/resume/src/index.js":"3","/home/owner/dojo/js/props/resume/resume/src/componenets/Profile/Profile.js":"4","/home/owner/dojo/js/props/resume/resume/src/componenets/Footer/Footer.js":"5","/home/owner/dojo/js/props/resume/resume/src/componenets/Header/Header.js":"6","/home/owner/dojo/js/props/resume/resume/src/Pages/Resume/Resume.js":"7","/home/owner/dojo/js/props/resume/resume/src/Pages/Portfilio/Portfolio.js":"8","/home/owner/dojo/js/props/resume/resume/src/componenets/Timeline/Timeline.js":"9","/home/owner/dojo/js/props/resume/resume/src/utils/resumeData.js":"10","/home/owner/dojo/js/props/resume/resume/src/componenets/Button/Button.js":"11"},{"size":362,"mtime":1612022400986,"results":"12","hashOfConfig":"13"},{"size":1157,"mtime":1612200150140,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1612022400986,"results":"15","hashOfConfig":"13"},{"size":2553,"mtime":1612280524250,"results":"16","hashOfConfig":"13"},{"size":769,"mtime":1612163575214,"results":"17","hashOfConfig":"13"},{"size":2273,"mtime":1612200329105,"results":"18","hashOfConfig":"13"},{"size":10034,"mtime":1612254935736,"results":"19","hashOfConfig":"13"},{"size":3639,"mtime":1612298383924,"results":"20","hashOfConfig":"13"},{"size":1348,"mtime":1612127506778,"results":"21","hashOfConfig":"13"},{"size":6642,"mtime":1612297738242,"results":"22","hashOfConfig":"13"},{"size":370,"mtime":1612136400284,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"foc8sk",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/home/owner/dojo/js/props/resume/resume/src/reportWebVitals.js",[],"/home/owner/dojo/js/props/resume/resume/src/App.js",[],["56","57"],"/home/owner/dojo/js/props/resume/resume/src/index.js",[],["58","59"],"/home/owner/dojo/js/props/resume/resume/src/componenets/Profile/Profile.js",["60","61","62"],"import { Typography } from '@material-ui/core'\nimport {React, useState} from 'react'\nimport CustomTimeline ,{CustomTimelineseperator}from  \"../Timeline/Timeline\"\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport resumeData from '../../utils/resumeData'\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport './Profile.css'\nimport joe from '../assets/images/joeprofile.jpg'\nimport { Timeline } from '@material-ui/icons';\nimport CustomButton from '../Button/Button'\nimport GetAppIcon from '@material-ui/icons/GetApp';\n// import EmailIcon from '@material-ui/icons/Email';\n\n\nconst CustomTimelineItem= ({title,text,link}) => (\n    <TimelineItem className=\"timeline_content\">\n        <CustomTimelineseperator />\n            <TimelineContent>\n               \n                    {link ? (<Typography className=\"timelineItem_text\"><span>{title}</span>{\" \"}\n                    <a className='aa' href={link} target='_blank'>{text}\n                    </a></Typography>\n                    ) : (\n                    <Typography className=\"timelineItem_text\" ><span>{title}</span> {text}</Typography>\n\n                )}\n            </TimelineContent>\n    </TimelineItem>\n)\n\nconst Profile = () => {\n    return (\n        <div className=\"profile\">\n        <div className='profile_container_shadow'>\n            <div className='profile_name'>\n            <Typography className=\"name\">{resumeData.name}</Typography>\n            <Typography className=\"title\">{resumeData.title}r</Typography>\n\n            </div>\n            <figure className='profile_image'>\n                <img src={joe} alt =\"\"/>\n       \n            </figure>\n            <div className='profile_information'>\n                <CustomTimeline icon={<CodeIcon />}>\n                <CustomTimelineItem title=\"Name:\" text={resumeData.name}/>\n                <CustomTimelineItem title=\"Title:\" text={resumeData.title}/>\n                <CustomTimelineItem title=\"Email:\" text={resumeData.email}/>\n\n\n                {Object.keys(resumeData.socials).map((key) => (\n                    <CustomTimelineItem title={key} text={resumeData.socials[key].text} link={resumeData.socials[key].link}  />\n\n                ))} \n                </CustomTimeline >\n             \n                <div  className=\"button_container\" style={{display: 'flex'}}>\n                   <CustomButton text={\"Download Cv\"} icon={<GetAppIcon/>} />\n                </div>\n\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Profile\n",["63","64"],"/home/owner/dojo/js/props/resume/resume/src/componenets/Footer/Footer.js",["65"],"import { Typography } from '@material-ui/core'\nimport React from 'react'\nimport './Footer.css'\nimport resumeData from '../../utils/resumeData'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div ClassName = \"footer_left\" >\n                <Typography className= \"footer_name\">{resumeData.name}</Typography>\n            </div>\n            <div ClassName = \"footer_right\">\n                <Typography className = \"footer_cp\">\n                    Developed by <a href =\"/\" target=\"_blank\">Joseph Lee</a> \n                    <br/>\n                    Cloned from <a href=\"https://themeforest.net/user/tavonline\" target=\"_blank\">Travoline</a>\n                </Typography>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n",["66","67"],"/home/owner/dojo/js/props/resume/resume/src/componenets/Header/Header.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"import React from \"react\"\nimport {Button,Form,FormControl,Nav, Navbar, NavDropdown}from \"react-bootstrap\"\nimport {HomeRounded, SchoolRounded, WorkRounder, Facebook , Twitter, LinkedIn, GitHubIcon, Telegram} from \"@material-ui/icons\"\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {Link, NavLink, withRouter } from \"react-router-dom\"\nimport resumeData from \"../../utils/resumeData\"\n// import LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n// import GitHubIcon from \"@material-ui/icons/GitHub\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CustomButton from '../Button/Button'\nimport './Header.css'\n\nconst Header = (props) => {\n    // if the  props exist fetch location if loction exists fetch pathname\n    const pathName = props?.location?.pathName\n    return (\n        <Navbar  expand=\"lg\"  className=\"header\">\n            {/* home */}\n            <Nav.Link as={NavLink} to=\"/\" className= \"header_navlink\">\n                <Navbar.Brand className=\"header_home\">\n                    <HomeRounded />\n                </Navbar.Brand>\n            </Nav.Link>\n\n            <Navbar.Toggle />\n            <Navbar.Collapse>\n                <Nav className='header_left'>\n            {/* resume home links */}\n                    <Nav.Link as={NavLink} \n                    to = \"/\" \n                    className={pathName==\"/\" ? \"header_link_active\":\"header_link\"}>\n                        Resume\n                    </Nav.Link>\n       \n            {/* portfolio */}\n\n                    <Nav.Link as={NavLink} to = \"/portfolio\" className={pathName ==\"/portfolio\" ? \"header_link_active\":\"header_link\"}>\n                        Portfolio\n                    </Nav.Link>\n\n            </Nav>\n                <div className=\"header_right\">\n                    {\n                        Object.keys(resumeData.socials).map((key) =>(\n                            <a href={resumeData.socials[key].link} target=\"_blank\">\n                                {resumeData.socials[key].Icon}\n                               \n                            </a>\n                    ))}\n                    <CustomButton text={'Hire Me'} icon={<Telegram />}/>\n                </div>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default withRouter(Header);\n","/home/owner/dojo/js/props/resume/resume/src/Pages/Resume/Resume.js",["83","84","85","86","87"],"import React from 'react'\nimport { Grid, Typography , Icon, TextField} from '@material-ui/core'\nimport './Resume.css'\nimport resumeData from '../../utils/resumeData'\nimport CustomTimeline ,{CustomTimelineseperator}from  \"../../componenets/Timeline/Timeline\"\nimport WorkIcon from '@material-ui/icons/Work';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator'\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineContent from '@material-ui/lab/TimelineContent'\nimport SchoolIcon from '@material-ui/icons/School';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CustomButton from '../../componenets/Button/Button'\n\n\n\n\n\n\n\nconst Resume = () => {\n    return (\n        <>\n       \n        {/* about */}\n        <div className=\"aboutme-back\">\n        <Grid container className='section pb_45  pt_45'>\n            <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> About Me </h6>\n            </Grid>\n            <Grid item xs={12}>\n            <Typography variant=\"body2\" className=\"about_text\">{resumeData.about}</Typography>\n            </Grid>\n        </Grid >\n     \n        {/* education experince */}\n         <Grid container className='section pb_45 '>\n         <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> Resume </h6>\n            </Grid >\n            <Grid item xs={12}>\n                <Grid container className=\"resume_timeline\">\n                    {/* work hist */}\n                    <Grid item sm={12} md={6}>\n                        <CustomTimeline title=\"work experince\" icon={<WorkIcon/>}>\n                            {resumeData.workExps.map( (workExp)=> (\n                                <TimelineItem>\n                                    <CustomTimelineseperator />\n                                    <TimelineContent className='timeline_content'>\n                                        <Typography className=\"timeline_title\">\n                                            {workExp.title}\n                                        </Typography>\n                                        <Typography variant='body1' className=\"timeline_date\">\n                                            {workExp.date}\n                                        </Typography>\n                                        <Typography variant='caption' className=\"timeline_description\">\n                                            {workExp.description}\n                                        </Typography>\n                                    </TimelineContent>\n                                </TimelineItem>\n\n                            ) )}\n                        </CustomTimeline>\n                        </Grid>\n                    {/* education */}\n                    <Grid item sm={12} md={6}>\n                    <CustomTimeline title=\"Education\" icon={<SchoolIcon/>}>\n                            {resumeData.educationExps.map( (educationExp)=> (\n                                <TimelineItem>\n                                    <CustomTimelineseperator />\n                                    <TimelineContent className='timeline_content'>\n                                        <Typography className=\"timeline_title\">\n                                            {educationExp.title}\n                                        </Typography>\n                                        <Typography variant='body1' className=\"timeline_date\">\n                                            {educationExp.date}\n                                        </Typography>\n                                        <Typography variant='caption' className=\"timeline_description\">\n                                            {educationExp.description}\n                                        </Typography>\n                                    </TimelineContent>\n                                </TimelineItem>\n\n                            ) )}\n                        </CustomTimeline>\n                    </Grid>\n                </Grid>\n            </Grid>\n         </Grid>\n         {/* langaugess */}\n         </div>\n        <Grid container className='section pb_45'>\n        <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> Job Skills </h6>\n            </Grid >\n\n\n            <Grid item xs = {12}>\n                <Grid container spacing={3} justify='space-around'>\n                    {resumeData.jobSkills.map(jobSkill=>(\n                        <Grid item xs={12} sm={6} md={3}>\n                        \n                    <div className=\"jobSkill\">\n                        <Icon className='jobSkill_icon'>{jobSkill.icon}</Icon>\n                        <Typography className='jobSkill_title' variant='h6'>{jobSkill.title}</Typography>\n                        <Typography className='jobSkill_description' variant='body2'>{jobSkill.description}</Typography>\n\n                    </div>\n                        \n                        </Grid>\n\n                    ))}\n                </Grid>\n\n            </Grid>\n        </Grid>\n        {/* skills */}\n        <div className=\"skills-div\">\n        <Grid container  className='section graybg pb_45 p_50'>\n            \n            <Grid item xs={12} >\n                <Grid container justify='space-between' spacing={3}>\n                {resumeData.devSkills.map(devSkill =>(\n                <Grid item xs={12} md={3} sm={6}>\n                    <Paper elevation={0} className=\"devSkill\">\n                        <Typography variant='h6' className='devSkills_title'>\n                            {devSkill.title}\n                        </Typography>\n                        {devSkill.description.map((element) => (\n                            <Typography variant='body2' className='devSkill_description'>\n                                <TimelineDot variant={'outlined'} className=\"timeline_dot\"/>\n                                    {element}\n                            </Typography>\n                        ))}\n                    </Paper>\n                </Grid>\n\n            ) )}\n                </Grid>\n            </Grid>\n          \n        \n        </Grid>\n        {/* contact */}\n        <Grid container spacing={5} className='section pt_45 pb_45'>\n                {/* form for the contacts */}\n                <Grid item xs={12} lg={7}>\n\n                    <Grid container>\n                        <Grid item className= \"section_title mb_30\">\n                            <span></span>\n                            <h6 className=\"section_title_text\">Contact Form</h6>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField fullWidth name=\"name\" label='Name'/>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField fullWidth name=\"eamil\" label='@email'/>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    <TextField fullWidth name=\"message\" label='Message' multiline rows={4}/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <CustomButton text='Submit'/>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n\n                {/* contact_info */}\n                <Grid item xs={12} lg={5}>\n                    <Grid container>\n                        <Grid item className= \"section_title mb_30\">\n                            <span></span>\n                            <h6 className=\"section_title_text\">Contact Information</h6>\n\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Location: </span> {resumeData.city}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Phone: </span> {resumeData.phone}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Email: </span> {resumeData.email}\n                                </Typography>\n                            </Grid>\n                            </Grid>\n                        </Grid>\n                    <Grid item xs={12}>\n                        <Grid container className=\"contactInfo_socialsContainer\">\n                            {Object.keys(resumeData.socials).map((key)=>(\n                                <Grid item className=\"contactInfo_social\"> \n                                    <a href={resumeData.socials[key].link}>\n                                        {resumeData.socials[key].Icon}\n                                    </a>\n                                </Grid>\n                                \n                            ))}\n                        </Grid>\n\n                    </Grid>\n                    \n                </Grid>\n                        \n                </Grid>            \n        </Grid>\n    \n        </div>\n        </>\n\n    )\n}\n\nexport default Resume\n","/home/owner/dojo/js/props/resume/resume/src/Pages/Portfilio/Portfolio.js",["88","89","90","91","92"],"import { Grid, Tabs, Tab, CardActionArea, CardMedia, Typography, Card, CardContent, Grow, DialogContent, DialogActions } from '@material-ui/core'\n\nimport './Portfolio.css'\nimport {React, useState, Dialog, DialogTitle} from 'react'\nimport resumeData from '../../utils/resumeData'\n\n\n\nconst Portfolio = () => {\n    \n    const [tabValue, setTabValue] = useState(\"ALL\");\n    \n    const [projectDialog, setProjectDialog] = useState(false);\n\n\n    \n    \n    return (\n        <Grid container className= \" section pb_45 pt_45\">\n            <Grid item className= \"section_title mb_30\">\n                <span></span>\n                <h6 className=\"section_title_text\">Portfolio</h6>\n            </Grid>\n\n\n            <Grid item xs={12}>\n                <Tabs \n                value = {tabValue} \n                indicatorColor=\"white\" \n                className='custom_tabs' \n                onChange={(event,newvalue) => setTabValue(newvalue)}>\n                <Tab \n                label=\"ALL\" \n                value=\"ALL\" \n                className={\n                    tabValue == 'All' ? 'customTabs_item active': 'customTabs_item'\n                    } />\n\n\n                    {[...new Set(resumeData.projects.map(item => item.tag))].map(tag=>(\n                        <Tab label={tag} value={tag} className={tabValue == 'All' ? 'customTabs_item active': 'customTabs_item'}></Tab>\n                        \n                    ))}\n\n                </Tabs>\n            </Grid>\n            \n\n            <Grid item xs={12}>\n                <Grid container spacing={2} >\n                    {resumeData.projects.map((project) => (\n\n                        <>\n                        {tabValue == project.tag || tabValue ==\"ALL\" ? ( \n\n                            <Grid item>\n                                <Grow in timeout={1000}>\n                                    <Card className='CustomCard' onClick={() => (project)}>\n                                        <CardActionArea>\n                                            <CardMedia className='customCard_image' image={project.image} title={project.title}/>\n                                                <CardContent>\n                                                    <Typography className='customCard_title'>{project.title}</Typography>\n                                                    <Typography variant='body2' className='customCard_description'>{project.caption}</Typography>\n                                                </CardContent>\n                                        </CardActionArea>\n                                    </Card>\n                                </Grow>\n                            </Grid>\n                        ):null}\n                        </>\n                    ))}\n                </Grid>\n                    </Grid>\n\n\n\n                    <Dialog open={projectDialog} onClose={()=>setProjectDialog(false)}>\n                        <DialogTitle onClose={()=>setProjectDialog(false)}>\n                            {projectDialog.title}\n                        </DialogTitle>\n                    <img src=\"\" alt=\"\"/>\n                    <DialogContent>\n                        {projectDialog.description}\n                    </DialogContent>\n                    <DialogActions>\n                        {projectDialog?.links?.map(link => (\n                            <a href={link.link} target=\"_blank\">\n                                {link.icon}\n                            </a>\n                       \n                           ))}\n                    </DialogActions>\n                </Dialog>\n        </Grid>\n    )\n}\n\nexport default Portfolio\n","/home/owner/dojo/js/props/resume/resume/src/componenets/Timeline/Timeline.js",[],"/home/owner/dojo/js/props/resume/resume/src/utils/resumeData.js",["93"],"/home/owner/dojo/js/props/resume/resume/src/componenets/Button/Button.js",[],["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":24},{"ruleId":"102","severity":1,"message":"106","line":11,"column":10,"nodeType":"104","messageId":"105","endLine":11,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":23,"column":51,"nodeType":"109","endLine":23,"endColumn":66},{"ruleId":"96","replacedBy":"110"},{"ruleId":"98","replacedBy":"111"},{"ruleId":"107","severity":1,"message":"108","line":16,"column":82,"nodeType":"109","endLine":16,"endColumn":97},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},{"ruleId":"102","severity":1,"message":"114","line":2,"column":9,"nodeType":"104","messageId":"105","endLine":2,"endColumn":15},{"ruleId":"102","severity":1,"message":"115","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":20},{"ruleId":"102","severity":1,"message":"116","line":2,"column":21,"nodeType":"104","messageId":"105","endLine":2,"endColumn":32},{"ruleId":"102","severity":1,"message":"117","line":2,"column":46,"nodeType":"104","messageId":"105","endLine":2,"endColumn":57},{"ruleId":"102","severity":1,"message":"118","line":3,"column":22,"nodeType":"104","messageId":"105","endLine":3,"endColumn":35},{"ruleId":"102","severity":1,"message":"119","line":3,"column":37,"nodeType":"104","messageId":"105","endLine":3,"endColumn":48},{"ruleId":"102","severity":1,"message":"120","line":3,"column":50,"nodeType":"104","messageId":"105","endLine":3,"endColumn":58},{"ruleId":"102","severity":1,"message":"121","line":3,"column":61,"nodeType":"104","messageId":"105","endLine":3,"endColumn":68},{"ruleId":"102","severity":1,"message":"122","line":3,"column":70,"nodeType":"104","messageId":"105","endLine":3,"endColumn":78},{"ruleId":"102","severity":1,"message":"123","line":3,"column":80,"nodeType":"104","messageId":"105","endLine":3,"endColumn":90},{"ruleId":"102","severity":1,"message":"124","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":21},{"ruleId":"102","severity":1,"message":"125","line":5,"column":9,"nodeType":"104","messageId":"105","endLine":5,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":31,"column":40,"nodeType":"128","messageId":"129","endLine":31,"endColumn":42},{"ruleId":"126","severity":1,"message":"127","line":37,"column":82,"nodeType":"128","messageId":"129","endLine":37,"endColumn":84},{"ruleId":"107","severity":1,"message":"108","line":45,"column":68,"nodeType":"109","endLine":45,"endColumn":83},{"ruleId":"102","severity":1,"message":"130","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":25},{"ruleId":"102","severity":1,"message":"131","line":9,"column":8,"nodeType":"104","messageId":"105","endLine":9,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":30,"column":57,"nodeType":"109","endLine":30,"endColumn":61},{"ruleId":"132","severity":1,"message":"133","line":41,"column":54,"nodeType":"109","endLine":41,"endColumn":58},{"ruleId":"132","severity":1,"message":"133","line":97,"column":53,"nodeType":"109","endLine":97,"endColumn":57},{"ruleId":"126","severity":1,"message":"127","line":36,"column":30,"nodeType":"128","messageId":"129","endLine":36,"endColumn":32},{"ruleId":"126","severity":1,"message":"127","line":41,"column":74,"nodeType":"128","messageId":"129","endLine":41,"endColumn":76},{"ruleId":"126","severity":1,"message":"127","line":54,"column":35,"nodeType":"128","messageId":"129","endLine":54,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":54,"column":62,"nodeType":"128","messageId":"129","endLine":54,"endColumn":64},{"ruleId":"107","severity":1,"message":"108","line":87,"column":49,"nodeType":"109","endLine":87,"endColumn":64},{"ruleId":"134","severity":1,"message":"135","line":14,"column":1,"nodeType":"136","endLine":156,"endColumn":2},{"ruleId":"96","replacedBy":"137"},{"ruleId":"98","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Timeline' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["139"],["140"],["139"],["140"],"'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'SchoolRounded' is defined but never used.","'WorkRounder' is defined but never used.","'Facebook' is defined but never used.","'Twitter' is defined but never used.","'LinkedIn' is defined but never used.","'GitHubIcon' is defined but never used.","'AddCircleIcon' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TimelineSeparator' is defined but never used.","'TimelineConnector' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["139"],["140"],"no-global-assign","no-unsafe-negation"]